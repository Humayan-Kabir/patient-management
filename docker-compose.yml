version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: patient-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: patient_db
      POSTGRES_USER: patient_user
      POSTGRES_PASSWORD: super_secure_password
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal

  patient-service:
    build:
      context: ./patient-service
      dockerfile: Dockerfile
    image: patient-service:latest
    container_name: patient-service
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/patient_db
      SPRING_DATASOURCE_USERNAME: patient_user
      SPRING_DATASOURCE_PASSWORD: super_secure_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver

    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3000:3000"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:3000/actuator/health || exit 1" ]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - internal

volumes:
  pgdata:

networks:
  internal:
    driver: bridge